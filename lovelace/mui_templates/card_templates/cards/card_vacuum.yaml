---
### Card Vacuum ###
card_vacuum:
  show_name: false
  show_icon: false
  show_label: false
  template:
    - "icon_more_info_new"
    - "mui_translation_engine"
  variables:
    mui_card_vacuum_name: "[[[ return entity.attributes.friendly_name ]]]"
    mui_card_vacuum_icon: "[[[ return entity.attributes.icon ]]]"
    mui_card_vacuum_room:
    mui_card_vacuum_room_icon: "[[[ return entity.attributes.icon ]]]"
    mui_card_vacuum_camera: ""
    mui_card_vacuum_enable_popup: false
    mui_card_vacuum_camera_toggle: false
    mui_card_vacuum_light_color: >
      [[[
        var state = entity.state.toLowerCase();
        var colors = {
          "cleaning": "rgba(var(--color-blue)",
          "paused": "rgba(var(--color-green)",
          "mopping": "rgba(var(--color-yellow)",
          "returning": "rgba(var(--color-purple)",
          "error": "rgba(var(--color-red)",
          "default": "rgba(var(--color-theme)"
        }
        return (colors[state] || colors["default"]);
      ]]]
  triggers_update: "all"
  styles:
    grid:
      - grid-template-areas: >
          [[[
            let map = "'item1' 'map' 'item2'"
            if(variables.mui_card_vacuum_camera != ""){
              if(variables.mui_card_vacuum_camera_toggle){
                if(entity.state.toLowerCase() === 'cleaning' || entity.state.toLowerCase() === 'mopping'){
                  return map;
                }
              } else {
                 return map;
              }
            }
            return "'item1' 'item2'"
          ]]]
      - grid-template-columns: "1fr"
      - grid-template-rows: >
          [[[
            let map = "repeat(3, min-content)"
            if(variables.mui_card_vacuum_camera != ""){
              if(variables.mui_card_vacuum_camera_toggle){
                if(entity.state.toLowerCase() === 'cleaning' || entity.state.toLowerCase() === 'mopping'){
                  return map;
                }
              } else {
                 return map;
              }
            }
            return "repeat(2, min-content)"
          ]]]
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
      - background-color: >
          [[[
            if(hass.themes.darkMode){
              return "variables.mui_card_vacuum_light_color" + ", 0.1)";
              }
          ]]]
    custom_fields:
      map:
        - display: >
            [[[
              let map = "block"
              if(variables.mui_card_vacuum_camera != ""){
                if(variables.mui_card_vacuum_camera_toggle){
                  if(entity.state.toLowerCase() === 'cleaning' || entity.state.toLowerCase() === 'mopping'){
                    return map;
                  }
                } else {
                  return map;
                }
              }
              return "none"
            ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "[[[ return variables.mui_card_vacuum_icon ]]]"
              variables: >
                [[[
                  let vars = variables;
                  if(variables.mui_card_vacuum_enable_popup) {
                    vars.mui_custom_popup = {
                      'template': 'popup_vacuum_map',
                      'popup_variables': {'mui_card_vacuum_camera': variables.mui_card_vacuum_camera }
                    };
                  }
                  return vars;
                ]]]
              styles:
                icon:
                  - color: >
                      [[[
                        return variables.mui_card_vacuum_light_color + ", 1)";
                      ]]]
                img_cell:
                  - background-color: >
                      [[[
                        return variables.mui_card_vacuum_light_color + ", 0.05)";
                      ]]]
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              variables: >
                [[[
                  let vars = variables;
                  if(variables.mui_card_vacuum_enable_popup) {
                    vars.mui_custom_popup = {
                      'template': 'popup_vacuum_map',
                      'popup_variables': {'mui_card_vacuum_camera': variables.mui_card_vacuum_camera }
                    };
                  }
                  return vars;
                ]]]
              name: "[[[ return variables.mui_card_vacuum_name ]]]"
              label: >
                [[[
                  let label = entity.attributes.friendly_name
                  if(variables.mui_card_vacuum_label){
                    label = variables.mui_card_vacuum_label;
                  } else {
                    label = variables.mui_translation_state;
                  }
                  return label;
                ]]]
    map:
      card:
        type: "custom:button-card"
        show_name: false
        show_icon: false
        show_label: false
        entity: "[[[ return variables.mui_card_vacuum_camera ]]]"
        show_entity_picture: "true"
        styles:
          card:
            - box-shadow: "none"
          icon:
            - border-radius: "20px"
            - width: "100%"
    item2:
      card:
        type: "custom:button-card"
        template: >
          [[[ return variables.mui_card_vacuum_room ? "list_4_items" : "list_3_items"; ]]]
        styles:
          card:
            - background: "none"
            - border-radius: "0"
          custom_fields:
            item4:
              - display: >
                  [[[ return variables.mui_card_vacuum_room ? "block" : "none"; ]]]
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "mdi:play"
              state:
                - operator: "template"
                  value: "[[[ return ['cleaning','mopping'].includes(entity.state.toLowerCase()) ]]]"
                  icon: "mdi:stop"
                  tap_action:
                    action: "call-service"
                    service: "vacuum.stop"
                    service_data:
                      entity_id: "[[[ return entity.entity_id ]]]"
              tap_action:
                action: "call-service"
                service: >
                  [[[
                    return ['cleaning','mopping'].includes(entity.state.toLowerCase()) ? "vacuum.stop" : "vacuum.start";
                  ]]]
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
          item2:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "mdi:home-map-marker"
              tap_action:
                action: "call-service"
                service: "vacuum.return_to_base"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "mdi:map-marker"
              state:
              tap_action:
                action: "call-service"
                service: "vacuum.locate"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
          item4:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return variables.mui_card_vacuum_room ]]]"
              icon: "[[[ return variables.mui_card_vacuum_room_icon ]]]"
              tap_action:
                action: "call-service"
                service: "script.turn_on"
                service_data:
                  entity_id: "[[[ return variables.mui_card_vacuum_room ]]]"
