---
card_light_brightness:
  template:
    - "icon_more_info_new"
    - "mui_translation_engine"
  variables:
    mui_card_light_name: "[[[ return entity.attributes.friendly_name ]]]"
    mui_card_light_icon: "[[[ return entity.attributes.icon ]]]"
    mui_card_light_enable_collapse: true
    mui_card_light_enable_brightness: false
    mui_card_light_enable_horizontal: false
    mui_card_light_enable_horizontal_wide: false
    mui_card_light_enable_color: false
    mui_card_light_force_background_color: false
    mui_card_light_enable_popup: false
    mui_card_light_enable_popup_tap: false
  show_icon: false
  show_name: false
  show_label: false
  state:
    - value: "on"
      styles:
        card:
          - background-color: >-
              [[[
                  var color = entity.attributes.rgb_color;
                  if (variables.mui_card_light_enable_color == true){
                    if(variables.mui_card_light_force_background_color == true){
                      if (color){
                        return 'rgba(' + color + ',0.1)'
                      } else {
                        return 'rgba(var(--color-yellow-text),0.1)'
                      }
                    }
                  }
                  return 'rgba(var(--color-background-yellow),var(--opacity-bg))';
              ]]]
  styles:
    grid:
      - grid-template-areas: >
          [[[
                if (variables.mui_card_light_enable_collapse && entity.state != "on") {
                    return "\"item1\"";
                } else if (variables.mui_card_light_enable_horizontal) {
                    return "\"item1 item2\"";
                } else if (variables.mui_card_light_enable_brightness) {
                    return "\"item1\" \"item2\"";
                } else {
                    return "\"item1\"";
                }
          ]]]
      - grid-template-columns: >
          [[[
                if (variables.mui_card_light_enable_collapse && entity.state != "on") {
                    return "1fr";
                } else if (variables.mui_card_light_enable_horizontal) {
                  if(variables.mui_card_light_enable_horizontal_wide){
                    return "1fr 2fr";
                    } else {
                      return "1fr 1fr";
                    }
                } else {
                    return "1fr";
                }
          ]]]
      - grid-template-rows: >
          [[[
                if (variables.mui_card_light_enable_collapse && entity.state != "on") {
                    return "1fr";
                } else if (variables.mui_card_light_enable_brightness && !variables.mui_card_light_enable_horizontal) {
                    return "min-content min-content";
                } else {
                    return "1fr";
                }
          ]]]
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    custom_fields:
      item2:
        - display: >
            [[[
                  if (variables.mui_card_light_enable_collapse && entity.state != "on") {
                      return "none";
                  } else if (variables.mui_card_light_enable_brightness) {
                      return "block";
                  } else {
                      return "none";
                  }
            ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "[[[ return variables.mui_card_light_icon ]]]"
              variables: >
                [[[
                  let vars = variables;
                  if(variables.mui_card_light_enable_popup) {
                    vars.mui_custom_popup = {
                      'template': 'popup_light_brightness'
                    };
                  }
                  return vars;
                ]]]
              styles:
                icon:
                  - color: >
                      [[[
                          var color = entity.attributes.rgb_color;
                          if (entity.state != "on"){
                            return 'rgba(var(--color-theme),0.2)';
                          }
                          else if (color && variables.mui_card_light_enable_color){
                            return 'rgba(' + color + ',1)'
                          }
                          else{
                            return 'rgba(var(--color-yellow),1)'
                          }
                      ]]]
                img_cell:
                  - background-color: >
                      [[[
                          var color = entity.attributes.rgb_color;
                          if (entity.state != "on"){
                            return 'rgba(var(--color-theme),0.05)';
                          }
                          else if (color && variables.mui_card_light_enable_color){
                            return 'rgba(' + color + ',0.2)';
                          }
                          else{
                            return 'rgba(var(--color-yellow),0.2)';
                          }
                      ]]]
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              variables: >
                [[[
                  let vars = variables;
                  if(variables.mui_card_light_enable_popup) {
                    vars.mui_custom_popup = {
                      'template': 'popup_light_brightness'
                    };
                  }
                  return vars;
                ]]]
              name: "[[[ return variables.mui_card_light_name ]]]"
              label: >-
                [[[
                  var label = variables.mui_translation_state
                    if (entity.attributes.brightness != null && entity.state === 'on'){
                      var bri = Math.round(entity.attributes.brightness / 2.55);
                      var label = (bri ? bri : "0") + "%";
                    }
                  return label;
                ]]]
              state:
                - value: "on"
                  styles:
                    name:
                      - color: >-
                          [[[
                              var color = entity.attributes.rgb_color;
                              if (variables.mui_card_light_enable_color == true){
                                if(variables.mui_card_light_force_background_color == true){
                                  if (color){
                                    return 'rgba(' + color + ',1)'
                                  } else {
                                    return 'rgba(var(--color-yellow-text),1)'
                                  }
                                }
                              }
                              return 'rgba(var(--color-yellow-text),1)'
                          ]]]
                    label:
                      - color: >-
                          [[[
                              var color = entity.attributes.rgb_color;
                              if (variables.mui_card_light_enable_color == true){
                                if(variables.mui_card_light_force_background_color == true){
                                  if (color){
                                    return 'rgba(' + color + ',1)'
                                  } else {
                                    return 'rgba(var(--color-yellow-text),1)'
                                  }
                                }
                              }
                              return 'rgba(var(--color-yellow-text),1)'
                          ]]]
    item2:
      card:
        type: "horizontal-stack"
        cards:
          - type: "custom:button-card"
            template: "widget_icon"
            tap_action:
              action: "call-service"
              service: "light.turn_on"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                brightness: "[[[ return variables.brightness_low ]]]"
            icon: "mdi:lightbulb-on-10"
          - type: "custom:button-card"
            template: "widget_icon"
            tap_action:
              action: "call-service"
              service: "light.turn_on"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                brightness: "[[[ return variables.brightness_medium ]]]"
            icon: "mdi:lightbulb-on-50"
          - type: "custom:button-card"
            template: "widget_icon"
            tap_action:
              action: "call-service"
              service: "light.turn_on"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                brightness: "[[[ return variables.brightness_high ]]]"
            icon: "mdi:lightbulb-on"
