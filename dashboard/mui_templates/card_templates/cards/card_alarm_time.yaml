---
### Card Alarm ###
card_alarm_time:
  triggers_update: "all"
  template:
    - "icon_more_info_new"
  variables:
    mui_card_alarm_time_name: "[[[ return entity.attributes.friendly_name ]]]"
    mui_card_alarm_time_icon: "[[[ return entity.attributes.icon ]]]"
    mui_card_alarm_time_horizontal: false
    mui_card_alarm_time_step: 15
  show_icon: false
  show_name: false
  show_label: false
  state:
    - value: "on"
      styles:
        card:
          - background-color: "[[[ return 'rgba(var(--color-background-blue),var(--opacity-bg))' ]]]"
  styles:
    grid:
      - grid-template-areas: >
          [[[
              if (entity.state != "on") {
                  return "\"item1\"";
              }
              if (variables.mui_card_alarm_time_horizontal) {
                  return "\"item1 item2\"";
              }
              return "\"item1\" \"item2\"";
          ]]]
      - grid-template-columns: >
          [[[
              if (variables.mui_card_alarm_time_horizontal) {
                  return "1fr 1fr";
              }
              return "1fr";
          ]]]
      - grid-template-rows: >
          [[[
              if (variables.mui_card_alarm_time_horizontal || entity.state != "on") {
                  return "1fr";
              }
              return "min-content min-content";
          ]]]
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    custom_fields:
      item2:
        - display: >
            [[[
              if (entity.state != 'off') {
                  return "block";
              }
              return "none";
            ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              styles:
                icon:
                  - color: >
                      [[[ 
                          if (entity.state == "off") {
                            return 'rgba(var(--color-theme),0.2)';
                          } else {
                            return 'rgba(var(--color-blue),1)';
                          }
                      ]]]
                img_cell:
                  - background-color: >
                      [[[
                          if (entity.state == "off") {
                            return 'rgba(var(--color-theme),0.05)';
                          } else {
                            return 'rgba(var(--color-blue),0.2)';
                          }
                      ]]]
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              name: "[[[ return variables.mui_card_alarm_time_name ]]]"
              label: >-
                [[[
                  if (entity.state == "on") {
                    return "On";
                  } else if (entity.state == "off") {
                    return "Off";
                  }
                ]]]
              state:
                - value: "on"
                  styles:
                    name:
                      - color: "[[[ return 'rgba(var(--color-blue-text),1)' ]]]"
                    label:
                      - color: "[[[ return 'rgba(var(--color-blue-text),1)' ]]]"
    item2:
      card:
        type: "custom:button-card"
        template: "list_3_items"
        styles:
          grid:
            - grid-template-areas: >
                [[[
                    if (variables.mui_card_alarm_time_horizontal) {
                      return "'item2'";
                    } else {
                      return "'item1 item2 item3'";
                    }
                ]]]
            - grid-template-columns: >
                [[[
                    if (variables.mui_card_alarm_time_horizontal) {
                      return "ifr";
                    } else {
                      return "1fr 1fr 1fr";
                    }
                ]]]
          custom_fields:
            item1:
              - display: >
                  [[[
                    if (variables.mui_card_alarm_time_horizontal) {
                        return "none";
                    }
                    return "block";
                  ]]]
            item3:
              - display: >
                  [[[
                    if (variables.mui_card_alarm_time_horizontal) {
                        return "none";
                    }
                    return "block";
                  ]]]
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: call-service
                service: "input_datetime.set_datetime"
                service_data:
                  entity_id: "[[[ return variables.alarm_set ]]]"
                  time: >
                    [[[
                      var timestamp = states[variables.alarm_set].attributes.timestamp;
                      let time_adjust = (60 + variables.mui_card_alarm_time_step) * 60;
                      let new_timestamp = timestamp - time_adjust;
                      var date = new Date(new_timestamp * 1000);
                      var hours = date.getHours();
                      var minutes = "0" + date.getMinutes();
                      var seconds = "0" + date.getSeconds();
                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
                      return formattedTime;
                    ]]]
              icon: "mdi:plus"
          item2:
            card:
              type: "custom:button-card"
              template:
                - "widget_icon"
                #- "mui_translation_engine" mui_translation_time
              entity: "[[[ return variables.alarm_set ]]]"
              tap_action:
                action: more-info
              show_icon: false
              show_label: true
              label: "[[[ return states[variables.alarm_set].state ]]]"
              styles:
                grid:
                  - grid-template-areas: "'l'"
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              tap_action:
                action: call-service
                service: "input_datetime.set_datetime"
                service_data:
                  entity_id: "[[[ return variables.alarm_set ]]]"
                  time: >
                    [[[
                      var timestamp = states[variables.alarm_set].attributes.timestamp;
                      let time_adjust = (60 - variables.mui_card_alarm_time_step) * 60;
                      let new_timestamp = timestamp - time_adjust;
                      var date = new Date(new_timestamp * 1000);
                      var hours = date.getHours();
                      var minutes = "0" + date.getMinutes();
                      var seconds = "0" + date.getSeconds();
                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
                      return formattedTime;
                    ]]]
              icon: "mdi:minus"
