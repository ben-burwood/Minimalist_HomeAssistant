---
### Card Generic ###
### Switch or Sensor ###
card_generic:
  template:
    - "icon_more_info_new"
    - "mui_translation_engine"
  show_last_changed: false
  variables:
    mui_card_generic_icon: "[[[ return entity.attributes.icon ]]]"
    mui_card_generic_name: "[[[ return entity.attributes.friendly_name ]]]"
    #mui_card_generic_swap: false
    mui_card_generic_states: true
    mui_card_generic_colour: false
    mui_card_generic_force_background_colour: false
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        styles:
          card:
            - background-color: >
                [[[
                    if (variables.mui_card_generic_states && variables.mui_card_generic_colour && (variables.mui_card_generic_force_background_colour || hass.themes.darkMode)) {
                      if (entity.state == "on") {
                        var colour = variables.mui_card_generic_colour;
                        return 'rgba(var(--color-background-' + colour + '),var(--opacity-bg))';
                      }
                    }
                    return "rgba(0,0,0,0)";
                ]]]
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "[[[ return variables.mui_card_generic_icon; ]]]"
              styles:
                icon:
                  - color: >
                      [[[
                          if (variables.mui_card_generic_states) {
                            if (entity.state == "on") {
                              if (variables.mui_card_generic_colour) {
                                var colour = variables.mui_card_generic_colour;
                                return 'rgba(var(--color-' + colour + '),1)';
                              }
                            } else {
                              return 'rgba(var(--color-theme),0.2)';
                            }
                          } else {
                            if (variables.mui_card_generic_colour) {
                              var colour = variables.mui_card_generic_colour;
                              return 'rgba(var(--color-' + colour + '),1)';
                            }
                          }
                          return 'rgba(var(--color-theme),1)';
                      ]]]
                img_cell:
                  - background-color: >
                      [[[
                          if (variables.mui_card_generic_states) {
                            if (entity.state == "on") {
                              if (variables.mui_card_generic_colour) {
                                var colour = variables.mui_card_generic_colour;
                                return 'rgba(var(--color-' + colour + '),0.2)';
                              }
                            }
                          } else {
                            if (variables.mui_card_generic_colour) {
                              var colour = variables.mui_card_generic_colour;
                              return 'rgba(var(--color-' + colour + '),0.2)';
                            }
                          }
                          return 'rgba(var(--color-theme),0.05)';
                      ]]]
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              name: "[[[ return variables.mui_card_generic_name ]]]"
              label: "[[[ return variables.mui_translation_state_unit ]]]"
              styles:
                name:
                  - color: >
                      [[[
                          if (variables.mui_card_generic_states && variables.mui_card_generic_colour && (variables.mui_card_generic_force_background_colour || hass.themes.darkMode)) {
                            if (entity.state == "on") {
                              var colour = variables.mui_card_generic_colour;
                              return 'rgba(var(--color-' + colour + '-text),1)';
                            }
                          }
                          return 'rgba(var(--color-theme),1)';
                      ]]]
                label:
                  - color: >
                      [[[
                        if (variables.mui_card_generic_states && variables.mui_card_generic_colour && (variables.mui_card_generic_force_background_colour || hass.themes.darkMode)) {
                          if (entity.state == "on") {
                            var colour = variables.mui_card_generic_colour;
                            return 'rgba(var(--color-' + colour + '-text),1)';
                          }
                        }
                        return 'rgba(var(--color-theme),1)';
                      ]]]