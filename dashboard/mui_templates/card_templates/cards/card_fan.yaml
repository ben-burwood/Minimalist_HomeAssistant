---
### Card Fan ###
card_fan:
  template:
    - "icon_more_info_new"
    - "mui_translation_engine"
  variables:
    mui_card_fan_name: "[[[ return entity.attributes.friendly_name ]]]"
    mui_card_fan_icon: "[[[ return entity.attributes.icon ]]]"
    mui_card_fan_enable_horizontal: false
    mui_card_fan_color: false
    mui_card_fan_force_background_color: false
    mui_card_fan_enable_collapse: false
    mui_card_fan_enable_slider: false
    mui_card_fan_slider_min: 0
    mui_card_fan_slider_max: 100
    mui_card_fan_enable_button: false
    mui_card_fan_button_icon: "mdi:rotate-3d-variant"
    mui_card_fan_button_service: "fan.oscillate"
    mui_card_fan_enable_popup: false
    mui_card_fan_enable_popup_tap: false
    mui_card_fan_temp_attribute: "temp"
    mui_card_fan_hum_attribute: "hum"
  show_icon: false
  show_name: false
  show_label: false
  state:
    - value: "on"
      styles:
        card:
          - background-color: >
              [[[
                  if (variables.mui_card_fan_color) {
                    if(variables.mui_card_fan_force_background_color || hass.themes.darkMode) {
                      var color = variables.mui_card_fan_color;
                      return 'rgba(var(--color-' + color + '),var(--opacity-bg))';
                    }
                  }
              ]]]
  styles:
    grid:
      - grid-template-areas: >
          [[[
            if (!variables.mui_card_fan_enable_horizontal) {
              if (!variables.mui_card_fan_enable_button) {
                return "'i n n slider slider slider' 'i l l . slider slider slider'"
              } else {
                return "'i n n slider slider button' 'i l l . slider slider button'"
              }
            } else {
              if (!variables.mui_card_fan_enable_button) {
                return "'i n n' 'i l l' 'slider slider slider'"
              } else {
                return "'i n n' 'i l l' 'slider slider button'"
            }
          ]]]
      - grid-template-columns: >
          [[[
            if (!variables.mui_card_fan_enable_horizontal) {
              return "min-content 2fr 1fr 1fr 1fr 1fr"
            } else {
              return "min-content 2fr 1fr"
            }
          ]]]
      - grid-template-rows: >
          [[[
            if (!variables.mui_card_fan_enable_horizontal) {
              return "min-content min-content"
            } else {
              return "min-content min-content min-content"
            }
          ]]]
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    custom_fields:
      item2:
        - display: >
            [[[
                if (variables.mui_card_fan_enable_collapse && entity.state != "on") {
                    return "none";
                } else if (variables.mui_card_fan_enable_slider) {
                    return "block";
                } else {
                    return "none";
                }
            ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "[[[ return variables.mui_card_fan_icon ]]]"
              styles:
                icon:
                  - color: >
                      [[[
                          if (variables.mui_card_fan_color && entity.state != "off") {
                            var color = variables.mui_card_fan_color;
                            return 'rgba(var(--color-' + color + '),1)';
                          }
                      ]]]
                img_cell:
                  - background-color: >
                      [[[
                          if (variables.mui_card_fan_color && entity.state != "off") {
                            var color = variables.mui_card_fan_color;
                            return 'rgba(var(--color-' + color + '),1)';
                          }
                      ]]]
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              name: "[[[ return variables.mui_card_fan_name ]]]"
              label: >
                [[[
                    if (entity.state != 'unavailable') {
                        if (variables.mui_card_fan_slider_temp_attribute != False) {
                            var temp = Math.round(entity.attributes[variables.mui_card_fan_temp_attribute]);
                            let temp_str = ' • ' + (temp ? temp : '0') + '°C';
                        } else {
                            let temp_str = ''
                        }
                        if (variables.mui_card_fan_slider_hum_attribute != False) {
                            var hum = Math.round(entity.attributes[variables.mui_card_fan_hum_attribute]);
                            let hum_str = ' • ' + (hum ? hum : '0') + '%';
                        } else {
                            let hum_str = ''
                        }

                        if (entity.state == 'off') {
                            if (variables.always_show_attributes == true) {
                                return variables.mui_off + temp_str + hum_str
                            } else {
                                return variables.mui_off
                            }
                        } else if (entity.state == 'on') {
                            if (entity.attributes.percentage != null) {
                                var per = entity.attributes.percentage;
                                return (per ? per : '0') + '%' + temp_str + hum_str;
                            } else {
                                return variables.mui_on
                            }
                        }
                    } else {
                        return variables.mui_unavailable;
                    }
                ]]]
              state:
                - value: "on"
                  styles:
                    name:
                      - color: >-
                          [[[
                              if(variables.mui_card_fan_force_background_color || hass.themes.darkMode) {
                                if (variables.mui_card_fan_color) {
                                  var color = variables.mui_card_fan_color;
                                  return 'rgba(var(--color-' + color + '),1)';
                                }
                              }
                          ]]]
                    label:
                      - color: >-
                          [[[
                              if(variables.mui_card_fan_force_background_color || hass.themes.darkMode) {
                                if (variables.mui_card_fan_color) {
                                  var color = variables.mui_card_fan_color;
                                  return 'rgba(var(--color-' + color + '),1)';
                                }
                              }
                          ]]]
    slider:
      card:
        type: "custom:my-slider"
        entity: "[[[ return entity.entity_id ]]]"
        radius: "14px"
        height: "42px"
        minSet: "[[[ return variables.mui_card_fan_slider_min ]]]"
        maxSet: "[[[ return variables.mui_card_fan_slider_max ]]]"
        mainSliderColor: >
          [[[
              var color = entity.attributes.rgb_color;
              if (entity.state == "unavailable"){
                return "rgba(var(--color-grey),1)";
              }
              else if (color && variables.mui_card_fan_color){
                return "rgba(" + color + ",1)";
              }
              else{
                return "rgba(var(--color-blue),1)";
              }
          ]]]
        secondarySliderColor: >
          [[[
              var color = entity.attributes.rgb_color;
              if (entity.state == "unavailable"){
                return "rgba(var(--color-grey),0.2)";
              }
              else if (color && variables.mui_card_fan_color){
                return "rgba(" + color + ",0.2)";
              }
              else{
                return "rgba(var(--color-blue),0.2)";
              }
          ]]]
        thumbColor: >
          [[[
              var color = entity.attributes.rgb_color;
              if (entity.state == "unavailable"){
                return "rgba(var(--color-grey),1)";
              }
              else if (color && variables.mui_card_fan_color){
                return "rgba(" + color + ",1)";
              }
              else{
                return "rgba(var(--color-blue),1)";
              }
          ]]]
        mainSliderColorOff: "rgba(var(--color-theme),0.05)"
        secondarySliderColorOff: "rgba(var(--color-theme),0.05)"
        thumbHorizontalPadding: "0px"
        thumbVerticalPadding: "0px"
        thumbWidth: "12px"
        card_mod:
        style: |
          ha-card {
            border-radius: 14px;
            box-shadow: none;
          }
    button:
      card:
        type: "custom:button-card"
        template:
          - "widget_icon"
        icon: "[[[ return variables.mui_card_fan_button_icon ]]]"
        entity: "[[[ return entity.entity_id ]]]"
        tap_action:
          action: "call-service"
          service: "[[[ return variables.mui_card_fan_button_service ]]]"
          service_data:
            entity_id: "[[[ return entity.entity_id; ]]]"
            oscillating: "[[[ return !entity.attributes[variables.oscillate_attribute] ]]]"
        state:
          - value: off
            styles:
              icon:
                - color: "rgba(var(--color-theme),0.2)"
